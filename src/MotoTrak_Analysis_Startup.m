function MotoTrak_Analysis_Startup


%% Define program-wide constants.
path = Vulintus_Set_AppData_Path('MotoTrak Analysis');                      %Use the MotoTrak Analysis AppData folder for configuration files.


%% Load the current configuration file.
handles = MotoTrak_Analysis_Default_Config;                                 %Load the default configuration values.
handles.config_path = path;                                                 %Save the expected configuration path.
[~, temp] = system('hostname');                                             %Grab the local computer name.
temp(temp < 33) = [];                                                       %Kick out any spaces and carriage returns from the computer name.
handles.host = temp;                                                        %Save the local computer name.
temp = [path '*mototrak_analysis.config'];                                  %Set the expected filename of the configuration file.
temp = dir(temp);                                                           %Find all matching configuration files in the main program path.
if isempty(temp)                                                            %If no configuration file was found...
    yesno = questdlg(['It looks like this might be your first time '...
        'running the MotoTrak Analysis functions. Do you have a custom '...
        'configuration file you''d like to load?'],...
        'LOAD CUSTOM CONFIGURATION FILE?','YES','NO','YES');                %Show an OK/Cancel warning that the file will be moved.
    if strcmpi(yesno,'yes')                                                 %If the user clicked "yes"...
        [file, temppath] = uigetfile('*mototrak_analysis.config',...
            'Load Custom MotoTrak Analysis Configuration');                 %Have the user select a configuration file.
        if file(1) ~= 0                                                     %If the user selected a valid file...
            [status, errmsg] = copyfile([temppath file],path,'f');          %Copy the configuration file to the MotoTrak application data directory.
            if status ~= 1                                                  %If the file couldn't be copied...
                errordlg(sprintf(['Could not copy the '...
                    'configuration file in:\n\n%s\n\nError:\n\n%s'],...
                    temppath,errmsg),'Configuration File Copy Error');      %Throw an error.
            end
            temp = struct('name',file);                                     %Create a temporary structure holding the configuration file name.
        end
    else                                                                    %Otherwise, if the user didn't load a configuration file.
        Vulintus_Write_Config('default','mototrak_analysis.config',path,...
            handles,{});                                                    %Create a default configuration file.
    end
end
if ~isempty(temp)                                                           %If any configuration files were found...
    if length(temp) == 1                                                    %If there's one configuration file in the main program path...
        handles.config_file = [path temp(1).name];                          %Set the configuration file path to the single file.
    else                                                                    %Otherwise, if there's multiple configuration files...
        temp = {temp.name};                                                 %Create a cell array of configuration file names.
        i = listdlg('PromptString',...
            'Which configuration file would you like to use?',...
            'name','Multiple Configuration Files',...
            'SelectionMode','single',...
            'listsize',[300 200],...
            'initialvalue',1,...
            'uh',25,...
            'ListString',temp);                                             %Have the user pick a configuration file to use from a list dialog.
        if isempty(i)                                                       %If the user clicked "cancel" or closed the dialog...
            clear('run');                                                   %Clear the global run variable from the workspace.
            return                                                          %Skip execution of the rest of the function.
        end
        handles.config_file = [path temp{i}];                               %Set the configuration file path to the single file.
    end
    handles = Vulintus_Load_Config(handles.config_file,handles);            %Call the function to the load the configuration file.
end


%% Specify which analysis functions to display for selection.
fcn_list = {'Graphical Analysis',@MotoTrak_Graphical_Analysis;...
    'Population Data to TSV',{@MotoTrak_PopData_to_TSV,handles};...
    'Single Session Data to TSV',@MotoTrak_SessionData_to_TSV;...
    'Daily Report',{@MotoTrak_Daily_Report,[],path};...
    'Isometric Pull Trial Viewer',@MotoTrak_Pull_Viewer;...
    'Supination Trial Viewer',@MotoTrak_Knob_Viewer;...
    'Lever Trial Viewer',@MotoTrak_Lever_Viewer;...
    'Session Info Editor',@MotoTrak_File_Editor;...
    'Edit Analysis Configuration',{@MotoTrak_Analysis_Edit_Config,handles}};          %Create a cell array listing the included functions.


%% Create the selection GUI.
uih = 1.5;                                                                  %Set the height for all buttons.
w = 10;                                                                     %Set the width of the function selection figure.
h = size(fcn_list,1)*(uih + 0.1) + 0.5 - 0.25*uih;                          %Set the height of the function selection figure.
set(0,'units','centimeters');                                               %Set the screensize units to centimeters.
pos = get(0,'ScreenSize');                                                  %Grab the screensize.
pos = [pos(3)/2-w/2, pos(4)/2-h/2, w, h];                                   %Scale a figure position relative to the screensize.
fig = figure('units','centimeters',...
    'Position',pos,...
    'resize','off',...
    'MenuBar','none',...
    'name','Select a MotoTrak Analysis Function',...
    'numbertitle','off');                                                   %Set the properties of the figure.
for i = 1:size(fcn_list,1)                                                  %Step through each available analysis function   
    uicontrol(fig,'style','pushbutton',...
        'string',fcn_list{i,1},...
        'units','centimeters',...
        'position',[0.1 h-i*(uih+0.1) 9.8 uih],...
        'fontweight','bold',...
        'fontsize',14,...
        'callback',fcn_list{i,2});                                          %Make a button for the port showing that it is busy.
end